// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactDOMRe from "reason-react/src/ReactDOMRe.js";

function Index$TodoAppItem(Props) {
  var task = Props.task;
  var checked = Props.checked;
  var onChange = Props.onChange;
  return React.createElement("li", {
              className: "mb-1"
            }, React.createElement("input", {
                  className: "border rounded-full mr-2",
                  checked: checked,
                  type: "checkbox",
                  onChange: onChange
                }), React.createElement("p", {
                  className: "font-mono text-lg inline-block"
                }, checked ? React.createElement("s", undefined, task) : task));
}

var TodoAppItem = /* module */[/* make */Index$TodoAppItem];

function Index$TodoApp(Props) {
  var match = React.useReducer((function (state, action) {
          if (typeof action === "number") {
            var match = state[/* formToggle */1];
            var newFormToggle = match ? /* ShowButton */0 : /* ShowForm */1;
            return /* record */[
                    /* todos */state[/* todos */0],
                    /* formToggle */newFormToggle,
                    /* input */state[/* input */2]
                  ];
          } else if (action.tag) {
            var idx = action[0];
            var newTodos = $$Array.copy(state[/* todos */0]);
            Caml_array.caml_array_get(newTodos, idx)[/* complete */1] = !Caml_array.caml_array_get(newTodos, idx)[/* complete */1];
            return /* record */[
                    /* todos */newTodos,
                    /* formToggle */state[/* formToggle */1],
                    /* input */state[/* input */2]
                  ];
          } else {
            return /* record */[
                    /* todos */$$Array.append(state[/* todos */0], /* array */[/* record */[
                            /* name */action[0],
                            /* complete */false
                          ]]),
                    /* formToggle */state[/* formToggle */1],
                    /* input */state[/* input */2]
                  ];
          }
        }), /* record */[
        /* todos : array */[],
        /* formToggle : ShowButton */0,
        /* input : record */[/* contents */undefined]
      ]);
  var dispatch = match[1];
  var state = match[0];
  var inputRef = React.useRef(null);
  var handleAdd = function (_e) {
    var match = inputRef.current;
    if (match == null) {
      return /* () */0;
    } else {
      var v = match.value;
      if (v !== "") {
        Curry._1(dispatch, /* AddTodo */Block.__(0, [v]));
        return Curry._1(dispatch, /* ToggleForm */0);
      } else {
        return 0;
      }
    }
  };
  var showForm = function (param) {
    return React.createElement("div", undefined, React.createElement("label", {
                    className: "font-mono text-lg"
                  }, "Task Name: "), React.createElement("input", {
                    ref: inputRef,
                    className: "font-mono bg-white border shadow-md rounded mr-2 px-1 py-1",
                    type: "text"
                  }), React.createElement("button", {
                    className: "btn",
                    type: "button",
                    onClick: handleAdd
                  }, "Add"));
  };
  var match$1 = state[/* formToggle */1];
  return React.createElement("div", {
              className: "container mx-auto text-center w-full"
            }, React.createElement("h1", {
                  className: "text-5xl font-mono"
                }, "Things To Do"), React.createElement("ul", undefined, $$Array.mapi((function (idx, item) {
                        return React.createElement(Index$TodoAppItem, {
                                    task: item[/* name */0],
                                    checked: item[/* complete */1],
                                    onChange: (function (param) {
                                        return Curry._1(dispatch, /* ToggleTodo */Block.__(1, [idx]));
                                      }),
                                    key: String(idx) + ("-" + item[/* name */0])
                                  });
                      }), state[/* todos */0])), match$1 ? showForm(/* () */0) : React.createElement("button", {
                    className: "btn mt-4",
                    type: "button",
                    onClick: (function (_evt) {
                        return Curry._1(dispatch, /* ToggleForm */0);
                      })
                  }, "Add Todo"));
}

var TodoApp = /* module */[/* make */Index$TodoApp];

ReactDOMRe.renderToElementWithId(React.createElement(Index$TodoApp, { }), "app");

export {
  TodoAppItem ,
  TodoApp ,
  
}
/*  Not a pure module */
